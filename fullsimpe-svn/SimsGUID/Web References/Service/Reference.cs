//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.42
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Sims.GUID.Service {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SimsGUIDBinding", Namespace="http://sims.ambertation.de/")]
    public partial class SimGUIDService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback registerUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback registerObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback extRegisterObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback listRegistredObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback enumerateRegistredObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback extEnumerateRegistredObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback describeRegistredObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback lockGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback freeGuidsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeUserProfileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SimGUIDService() {
            this.Url = "http://sims.ambertation.de/GUID/guidserver.php";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event registerUserCompletedEventHandler registerUserCompleted;
        
        /// <remarks/>
        public event registerObjectCompletedEventHandler registerObjectCompleted;
        
        /// <remarks/>
        public event extRegisterObjectCompletedEventHandler extRegisterObjectCompleted;
        
        /// <remarks/>
        public event listRegistredObjectsCompletedEventHandler listRegistredObjectsCompleted;
        
        /// <remarks/>
        public event enumerateRegistredObjectsCompletedEventHandler enumerateRegistredObjectsCompleted;
        
        /// <remarks/>
        public event extEnumerateRegistredObjectsCompletedEventHandler extEnumerateRegistredObjectsCompleted;
        
        /// <remarks/>
        public event describeRegistredObjectsCompletedEventHandler describeRegistredObjectsCompleted;
        
        /// <remarks/>
        public event loginUserCompletedEventHandler loginUserCompleted;
        
        /// <remarks/>
        public event lockGuidCompletedEventHandler lockGuidCompleted;
        
        /// <remarks/>
        public event addUserRangeCompletedEventHandler addUserRangeCompleted;
        
        /// <remarks/>
        public event freeGuidsCompletedEventHandler freeGuidsCompleted;
        
        /// <remarks/>
        public event getUserProfileCompletedEventHandler getUserProfileCompleted;
        
        /// <remarks/>
        public event changeUserProfileCompletedEventHandler changeUserProfileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/RegisterUser", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool registerUser(string username, string password) {
            object[] results = this.Invoke("registerUser", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginregisterUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("registerUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndregisterUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void registerUserAsync(string username, string password) {
            this.registerUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void registerUserAsync(string username, string password, object userState) {
            if ((this.registerUserOperationCompleted == null)) {
                this.registerUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterUserOperationCompleted);
            }
            this.InvokeAsync("registerUser", new object[] {
                        username,
                        password}, this.registerUserOperationCompleted, userState);
        }
        
        private void OnregisterUserOperationCompleted(object arg) {
            if ((this.registerUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerUserCompleted(this, new registerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/RegisterObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int registerObject(string username, string password, string name, bool fullguid) {
            object[] results = this.Invoke("registerObject", new object[] {
                        username,
                        password,
                        name,
                        fullguid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginregisterObject(string username, string password, string name, bool fullguid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("registerObject", new object[] {
                        username,
                        password,
                        name,
                        fullguid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndregisterObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void registerObjectAsync(string username, string password, string name, bool fullguid) {
            this.registerObjectAsync(username, password, name, fullguid, null);
        }
        
        /// <remarks/>
        public void registerObjectAsync(string username, string password, string name, bool fullguid, object userState) {
            if ((this.registerObjectOperationCompleted == null)) {
                this.registerObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterObjectOperationCompleted);
            }
            this.InvokeAsync("registerObject", new object[] {
                        username,
                        password,
                        name,
                        fullguid}, this.registerObjectOperationCompleted, userState);
        }
        
        private void OnregisterObjectOperationCompleted(object arg) {
            if ((this.registerObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerObjectCompleted(this, new registerObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ExtRegisterObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int extRegisterObject(string username, string password, string name, int reserved) {
            object[] results = this.Invoke("extRegisterObject", new object[] {
                        username,
                        password,
                        name,
                        reserved});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextRegisterObject(string username, string password, string name, int reserved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extRegisterObject", new object[] {
                        username,
                        password,
                        name,
                        reserved}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndextRegisterObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void extRegisterObjectAsync(string username, string password, string name, int reserved) {
            this.extRegisterObjectAsync(username, password, name, reserved, null);
        }
        
        /// <remarks/>
        public void extRegisterObjectAsync(string username, string password, string name, int reserved, object userState) {
            if ((this.extRegisterObjectOperationCompleted == null)) {
                this.extRegisterObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextRegisterObjectOperationCompleted);
            }
            this.InvokeAsync("extRegisterObject", new object[] {
                        username,
                        password,
                        name,
                        reserved}, this.extRegisterObjectOperationCompleted, userState);
        }
        
        private void OnextRegisterObjectOperationCompleted(object arg) {
            if ((this.extRegisterObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extRegisterObjectCompleted(this, new extRegisterObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ListRegistredObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string listRegistredObjects(string username, string password) {
            object[] results = this.Invoke("listRegistredObjects", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlistRegistredObjects(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("listRegistredObjects", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndlistRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void listRegistredObjectsAsync(string username, string password) {
            this.listRegistredObjectsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void listRegistredObjectsAsync(string username, string password, object userState) {
            if ((this.listRegistredObjectsOperationCompleted == null)) {
                this.listRegistredObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistRegistredObjectsOperationCompleted);
            }
            this.InvokeAsync("listRegistredObjects", new object[] {
                        username,
                        password}, this.listRegistredObjectsOperationCompleted, userState);
        }
        
        private void OnlistRegistredObjectsOperationCompleted(object arg) {
            if ((this.listRegistredObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listRegistredObjectsCompleted(this, new listRegistredObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/EnumerateRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string enumerateRegistredObjects(string username, string password) {
            object[] results = this.Invoke("enumerateRegistredObjects", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumerateRegistredObjects(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumerateRegistredObjects", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndenumerateRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enumerateRegistredObjectsAsync(string username, string password) {
            this.enumerateRegistredObjectsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void enumerateRegistredObjectsAsync(string username, string password, object userState) {
            if ((this.enumerateRegistredObjectsOperationCompleted == null)) {
                this.enumerateRegistredObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenumerateRegistredObjectsOperationCompleted);
            }
            this.InvokeAsync("enumerateRegistredObjects", new object[] {
                        username,
                        password}, this.enumerateRegistredObjectsOperationCompleted, userState);
        }
        
        private void OnenumerateRegistredObjectsOperationCompleted(object arg) {
            if ((this.enumerateRegistredObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enumerateRegistredObjectsCompleted(this, new enumerateRegistredObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ExtEnumerateRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string extEnumerateRegistredObjects(string username, string password, int reserved) {
            object[] results = this.Invoke("extEnumerateRegistredObjects", new object[] {
                        username,
                        password,
                        reserved});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextEnumerateRegistredObjects(string username, string password, int reserved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extEnumerateRegistredObjects", new object[] {
                        username,
                        password,
                        reserved}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndextEnumerateRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void extEnumerateRegistredObjectsAsync(string username, string password, int reserved) {
            this.extEnumerateRegistredObjectsAsync(username, password, reserved, null);
        }
        
        /// <remarks/>
        public void extEnumerateRegistredObjectsAsync(string username, string password, int reserved, object userState) {
            if ((this.extEnumerateRegistredObjectsOperationCompleted == null)) {
                this.extEnumerateRegistredObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnextEnumerateRegistredObjectsOperationCompleted);
            }
            this.InvokeAsync("extEnumerateRegistredObjects", new object[] {
                        username,
                        password,
                        reserved}, this.extEnumerateRegistredObjectsOperationCompleted, userState);
        }
        
        private void OnextEnumerateRegistredObjectsOperationCompleted(object arg) {
            if ((this.extEnumerateRegistredObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.extEnumerateRegistredObjectsCompleted(this, new extEnumerateRegistredObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/DescribeRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string describeRegistredObjects(string username, string password, int update) {
            object[] results = this.Invoke("describeRegistredObjects", new object[] {
                        username,
                        password,
                        update});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindescribeRegistredObjects(string username, string password, int update, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("describeRegistredObjects", new object[] {
                        username,
                        password,
                        update}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnddescribeRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void describeRegistredObjectsAsync(string username, string password, int update) {
            this.describeRegistredObjectsAsync(username, password, update, null);
        }
        
        /// <remarks/>
        public void describeRegistredObjectsAsync(string username, string password, int update, object userState) {
            if ((this.describeRegistredObjectsOperationCompleted == null)) {
                this.describeRegistredObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndescribeRegistredObjectsOperationCompleted);
            }
            this.InvokeAsync("describeRegistredObjects", new object[] {
                        username,
                        password,
                        update}, this.describeRegistredObjectsOperationCompleted, userState);
        }
        
        private void OndescribeRegistredObjectsOperationCompleted(object arg) {
            if ((this.describeRegistredObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.describeRegistredObjectsCompleted(this, new describeRegistredObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/LoginUser", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int loginUser(string username, string password) {
            object[] results = this.Invoke("loginUser", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginloginUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("loginUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndloginUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void loginUserAsync(string username, string password) {
            this.loginUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void loginUserAsync(string username, string password, object userState) {
            if ((this.loginUserOperationCompleted == null)) {
                this.loginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginUserOperationCompleted);
            }
            this.InvokeAsync("loginUser", new object[] {
                        username,
                        password}, this.loginUserOperationCompleted, userState);
        }
        
        private void OnloginUserOperationCompleted(object arg) {
            if ((this.loginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginUserCompleted(this, new loginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/lockGuid", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool lockGuid(int guid, string name) {
            object[] results = this.Invoke("lockGuid", new object[] {
                        guid,
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlockGuid(int guid, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("lockGuid", new object[] {
                        guid,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndlockGuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void lockGuidAsync(int guid, string name) {
            this.lockGuidAsync(guid, name, null);
        }
        
        /// <remarks/>
        public void lockGuidAsync(int guid, string name, object userState) {
            if ((this.lockGuidOperationCompleted == null)) {
                this.lockGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlockGuidOperationCompleted);
            }
            this.InvokeAsync("lockGuid", new object[] {
                        guid,
                        name}, this.lockGuidOperationCompleted, userState);
        }
        
        private void OnlockGuidOperationCompleted(object arg) {
            if ((this.lockGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lockGuidCompleted(this, new lockGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/AddUserRange", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool addUserRange(string username, string password) {
            object[] results = this.Invoke("addUserRange", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUserRange(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUserRange", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndaddUserRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addUserRangeAsync(string username, string password) {
            this.addUserRangeAsync(username, password, null);
        }
        
        /// <remarks/>
        public void addUserRangeAsync(string username, string password, object userState) {
            if ((this.addUserRangeOperationCompleted == null)) {
                this.addUserRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserRangeOperationCompleted);
            }
            this.InvokeAsync("addUserRange", new object[] {
                        username,
                        password}, this.addUserRangeOperationCompleted, userState);
        }
        
        private void OnaddUserRangeOperationCompleted(object arg) {
            if ((this.addUserRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserRangeCompleted(this, new addUserRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/FreeGuids", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int freeGuids(string username, string password) {
            object[] results = this.Invoke("freeGuids", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfreeGuids(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("freeGuids", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndfreeGuids(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void freeGuidsAsync(string username, string password) {
            this.freeGuidsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void freeGuidsAsync(string username, string password, object userState) {
            if ((this.freeGuidsOperationCompleted == null)) {
                this.freeGuidsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfreeGuidsOperationCompleted);
            }
            this.InvokeAsync("freeGuids", new object[] {
                        username,
                        password}, this.freeGuidsOperationCompleted, userState);
        }
        
        private void OnfreeGuidsOperationCompleted(object arg) {
            if ((this.freeGuidsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.freeGuidsCompleted(this, new freeGuidsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/GetUserProfile", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getUserProfile(string username, string password) {
            object[] results = this.Invoke("getUserProfile", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserProfile(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserProfile", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetUserProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserProfileAsync(string username, string password) {
            this.getUserProfileAsync(username, password, null);
        }
        
        /// <remarks/>
        public void getUserProfileAsync(string username, string password, object userState) {
            if ((this.getUserProfileOperationCompleted == null)) {
                this.getUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserProfileOperationCompleted);
            }
            this.InvokeAsync("getUserProfile", new object[] {
                        username,
                        password}, this.getUserProfileOperationCompleted, userState);
        }
        
        private void OngetUserProfileOperationCompleted(object arg) {
            if ((this.getUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserProfileCompleted(this, new getUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ChangeUserProfile", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool changeUserProfile(string username, string password, string data) {
            object[] results = this.Invoke("changeUserProfile", new object[] {
                        username,
                        password,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginchangeUserProfile(string username, string password, string data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("changeUserProfile", new object[] {
                        username,
                        password,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndchangeUserProfile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void changeUserProfileAsync(string username, string password, string data) {
            this.changeUserProfileAsync(username, password, data, null);
        }
        
        /// <remarks/>
        public void changeUserProfileAsync(string username, string password, string data, object userState) {
            if ((this.changeUserProfileOperationCompleted == null)) {
                this.changeUserProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeUserProfileOperationCompleted);
            }
            this.InvokeAsync("changeUserProfile", new object[] {
                        username,
                        password,
                        data}, this.changeUserProfileOperationCompleted, userState);
        }
        
        private void OnchangeUserProfileOperationCompleted(object arg) {
            if ((this.changeUserProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeUserProfileCompleted(this, new changeUserProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void registerUserCompletedEventHandler(object sender, registerUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void registerObjectCompletedEventHandler(object sender, registerObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registerObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void extRegisterObjectCompletedEventHandler(object sender, extRegisterObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extRegisterObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extRegisterObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void listRegistredObjectsCompletedEventHandler(object sender, listRegistredObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listRegistredObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listRegistredObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void enumerateRegistredObjectsCompletedEventHandler(object sender, enumerateRegistredObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enumerateRegistredObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enumerateRegistredObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void extEnumerateRegistredObjectsCompletedEventHandler(object sender, extEnumerateRegistredObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class extEnumerateRegistredObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal extEnumerateRegistredObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void describeRegistredObjectsCompletedEventHandler(object sender, describeRegistredObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class describeRegistredObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal describeRegistredObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void loginUserCompletedEventHandler(object sender, loginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void lockGuidCompletedEventHandler(object sender, lockGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class lockGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal lockGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void addUserRangeCompletedEventHandler(object sender, addUserRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void freeGuidsCompletedEventHandler(object sender, freeGuidsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class freeGuidsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal freeGuidsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void getUserProfileCompletedEventHandler(object sender, getUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void changeUserProfileCompletedEventHandler(object sender, changeUserProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeUserProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeUserProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591