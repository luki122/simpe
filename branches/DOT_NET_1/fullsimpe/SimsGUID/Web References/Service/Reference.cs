//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace Sims.GUID.Service {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SimsGUIDBinding", Namespace="http://sims.ambertation.de/")]
    public class SimGUIDService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public SimGUIDService() {
            this.Url = "http://sims.ambertation.de/GUID/guidserver.php";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/RegisterUser", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool registerUser(string username, string password) {
            object[] results = this.Invoke("registerUser", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginregisterUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("registerUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndregisterUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/RegisterObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int registerObject(string username, string password, string name, bool fullguid) {
            object[] results = this.Invoke("registerObject", new object[] {
                        username,
                        password,
                        name,
                        fullguid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginregisterObject(string username, string password, string name, bool fullguid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("registerObject", new object[] {
                        username,
                        password,
                        name,
                        fullguid}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndregisterObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ExtRegisterObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int extRegisterObject(string username, string password, string name, int reserved) {
            object[] results = this.Invoke("extRegisterObject", new object[] {
                        username,
                        password,
                        name,
                        reserved});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextRegisterObject(string username, string password, string name, int reserved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extRegisterObject", new object[] {
                        username,
                        password,
                        name,
                        reserved}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndextRegisterObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ListRegistredObject", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string listRegistredObjects(string username, string password) {
            object[] results = this.Invoke("listRegistredObjects", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlistRegistredObjects(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("listRegistredObjects", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndlistRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/EnumerateRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string enumerateRegistredObjects(string username, string password) {
            object[] results = this.Invoke("enumerateRegistredObjects", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenumerateRegistredObjects(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enumerateRegistredObjects", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndenumerateRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/ExtEnumerateRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string extEnumerateRegistredObjects(string username, string password, int reserved) {
            object[] results = this.Invoke("extEnumerateRegistredObjects", new object[] {
                        username,
                        password,
                        reserved});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginextEnumerateRegistredObjects(string username, string password, int reserved, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("extEnumerateRegistredObjects", new object[] {
                        username,
                        password,
                        reserved}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndextEnumerateRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/DescribeRegistredObjects", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string describeRegistredObjects(string username, string password, int update) {
            object[] results = this.Invoke("describeRegistredObjects", new object[] {
                        username,
                        password,
                        update});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindescribeRegistredObjects(string username, string password, int update, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("describeRegistredObjects", new object[] {
                        username,
                        password,
                        update}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnddescribeRegistredObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/LoginUser", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int loginUser(string username, string password) {
            object[] results = this.Invoke("loginUser", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginloginUser(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("loginUser", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndloginUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/lockGuid", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool lockGuid(int guid, string name) {
            object[] results = this.Invoke("lockGuid", new object[] {
                        guid,
                        name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginlockGuid(int guid, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("lockGuid", new object[] {
                        guid,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndlockGuid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/AddUserRange", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool addUserRange(string username, string password) {
            object[] results = this.Invoke("addUserRange", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginaddUserRange(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("addUserRange", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndaddUserRange(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sims.ambertation.de/GUID/FreeGuids", RequestNamespace="http://sims.ambertation.de/", ResponseNamespace="http://sims.ambertation.de/")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int freeGuids(string username, string password) {
            object[] results = this.Invoke("freeGuids", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfreeGuids(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("freeGuids", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndfreeGuids(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
    }
}
